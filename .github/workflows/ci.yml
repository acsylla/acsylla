name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Linux driver dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install libuv1 libuv1-dev default-jre
      - name: Install Mac driver dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install cmake libuv openssl
          export LDFLAGS="-L/opt/homebrew/lib"
          export LIBUV_ROOT_DIR="/opt/homebrew"
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade importlib_metadata<5
          make install-driver
          make compile
          make install-dev
      - name: Compile Cassandra Driver
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          export LDFLAGS="-L/usr/local/opt/openssl/lib"
          export CPPFLAGS="-I/usr/local/opt/openssl/include"
          export SSL_LIBRARY_PATH="/usr/local/opt/openssl/lib"
          export UV_LIBRARY_PATH="/usr/local/opt/libuv/lib"
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade importlib_metadata<5
          make install-driver
          make compile
          make install-dev
      - name: Compile and install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          make certs
          docker-compose up -d
      - name: Lint with flake8
        run: |
          make lint
      - name: Linux Test dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          make certs
          docker-compose up -d
      - name: Mac Test dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install cassandra
          make certs
          sed -i '' -e 's/\/certs/\.\/certs/g' ./conf/cassandra/cassandra.yaml
          cassandra -Dcassandra.config=./conf/cassandra/cassandra.yaml
      - name: Test
        run: |
          # wait till casssandra server is up, to be improved
          # by checking the readiness of the serivce
          sleep 90
          make test
