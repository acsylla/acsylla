name: PyPi release Linux x86_64
on:
  push:
    tags:
      - v*
jobs:
  build:
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Generate manylinux_2_28_x86_64-wheel
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir /tmp/acsylla
          cp -r . /tmp/acsylla
          docker run -v /tmp/acsylla:/io -e "PYTHON_VERSION=${{matrix.python-version}}" quay.io/pypa/manylinux_2_28_x86_64 /io/bin/build_manylinux_2_28_wheel.sh
          mkdir dist
          cp /tmp/acsylla/dist/acsylla-*.whl dist/
      - name: Test dependencies for manylinux_2_28_x86_64-wheel
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -y install default-jre
          make certs
          docker compose up -d
          # wait till casssandra server is up, to be improved
          # by checking the readiness of the serivce
          sleep 90
      - name: Test generated manylinux_2_28_x86_64-wheel
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          mkdir test_wheel
          cp dist/acsylla-*.whl test_wheel
          pip install virtualenv
          python -m virtualenv env
          source env/bin/activate
          pip install -r requirements-test.txt
          rm -r acsylla
          pip install test_wheel/acsylla-*.whl --upgrade
          make test
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.get_version.outputs.VERSION }}
          path: test_wheel/acsylla-*.whl
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.version }}
          path: wheelhouse/
      - name: Display content
        run: ls -R
        working-directory: wheelhouse/
      - name: Publish release to github
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            wheelhouse/*
          prerelease: >-
            ${{ contains(github.ref_name, 'a') || contains(github.ref_name, 'b')
              || contains(github.ref_name, 'rc') || contains(github.ref_name, 'dev') }}
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          packages_dir: wheelhouse/
          password: ${{ secrets.PYPY_RELEASE_UPLOAD }}
          repository_url: https://upload.pypi.org/legacy/
